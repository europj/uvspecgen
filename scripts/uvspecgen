#!/usr/bin/env python
#
# Generate UV-Vis spectra from Gaussian09 TDHF/TDDFT log files. 
# Copyright (C) 2013  Gaussian Toolkit
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""UVSpecGen

This program uses the UVSpec Python module for generating UV-Vis spectra
from Gaussian09 TDHF/TDDFT log files.  Alternatively, the uvspec module can
be imported into your own programs for use of the AbsorptionSpectrum class.

"""

# ================
# PROGRAM DEFAULTS
# ================
# Gaussian fit parameters can be modified using the command-line options.
# To permanently change these values (make them default), update the
# variable definitions below.
defaults = dict(
    grid  = 0.02,
    range = 2.50,
    sigma = 0.12,
    shift = 0.00)

import sys
try:
    from uvspec import ui as ui
    from uvspec import uvspec as uv
    from uvspec import version as vrsn 
except ImportError:
    print " [ERROR] Python module uvspec is required"
    sys.exit(1)

def main():
    __version__ = vrsn.get_version()
    options = ui.CommandLineInput(__version__, defaults)
    outfile_name = generate_outfile_name(options.outfile, options.logfile)
   
    spectrum = uv.AbsorptionSpectrum(options.logfile, options.parameters)
    spectrum.create_outfile(outfile_name, options.output, options.nometa)
    
    if options.plot:
        spectrum.plot_spectrum()
    
    print ' Spectrum generation complete: output written to %s' % outfile_name
    return

if __name__ == "__main__":
    main()
