# Generate UV-Vis spectra from electronic structure TDHF/TDDFT output files. 
# Copyright (C) 2014 Li Research Group (University of Washington) 
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""Electronic structure program output file parsing using ``cclib``.

This module provides the abstract ``Logfile`` class for parsing excited
state energies and oscillator strengths from CIS, TD-HF, and TD-DFT
calculations.  It uses the ``cclib`` library for parsing the output of
various computational chemistry packages.  The following packages are
currently supported:
    * ADF
    * GAMESS
    * Gaussian03
    * Gaussian09
    * Jaguar

"""
import logging
import sys

try:
    from cclib.parser import ccopen
except ImportError:
    print ' [ERROR] cclib is required'
    sys.exit(1)


class Logfile(object):
    """Abstract logfile class for extracting excited state data.
    
    The ``cclib`` parsing library is used to return a generic 1D-array of
    excited state energies (in units of cm^-1) and a 1D-array of oscillator
    strengths for all excited states in a logfile generated by one of the
    supported computational chemistry packages.
    
    """
    def __init__(self, logfile_name):
        """Extract the excited state energies and oscillator strengths.

        When an instance of the ``Logfile`` class is created, the excited
        state energies and oscillator strengths are extracted from the
        ``logfile_name`` using the ``cclib`` parsing methods and stored as
        attributes of the class.

        """
        self.name = logfile_name
        self._logfile = self._parse_logfile()
        self.excited_state_energy = self._logfile.etenergies
        self.oscillator_strength = self._logfile.etoscs

    def __repr__(self):
        return 'Logfile: %s' % self.name

    def _parse_logfile(self):
        logfile = ccopen(self.name)
        logfile.logger.setLevel(logging.ERROR)
        return logfile.parse()
